function ddsf_plot(time, logs)
    ul_hist = logs.u_d;
    u_hist = logs.u;
    y_hist = logs.y;

    figure(1);
    p = size(y_hist, 1);
    
    for i=1:p
        subplot(p, 1, i);
        y_name = sprintf("y%d", i);
        plot(time, y_hist(1, :), 'r', 'LineWidth', 1.25, 'DisplayName', y_name);  
        title(sprintf("System Output %d", i));
        xlabel('t');
        ylabel(sprintf('Output %d', i));
        grid on;
    end
    
    % Plot learning inputs
    figure(2);
    m = size(u_hist, 1);

    for i=1:m
        subplot(m, 1, i);
        ul_name = sprintf("ul%d", i);
        stairs(time, ul_hist(1, :), 'r', 'LineWidth', 1.25, 'DisplayName', ul_name);
        title(sprintf("Learning Input %d", i));
        xlabel('t');
        % Later replace with appropriate names
        ylabel(sprintf('Learning input %d', i));
        grid on;
    end

    % Plot inputs generated by the safety filter
    figure(3);

    for i=1:m
        subplot(m, 1, i);
        u_name = sprintf("u%d", i);
        stairs(time, u_hist(1, :), 'r', 'LineWidth', 1.25, 'DisplayName', u_name);
        title(sprintf("Safe Input %d", i));
        xlabel('t');
        ylabel(sprintf('Safe control input %d', i));
        grid on;
    end

    % Comparison
    figure(4);

    for i=1:m
        subplot(m + p, 1, i);
        u_name = sprintf("u%d", i);
        ul_name = sprintf("ul%d", i);
        hold on;
        stairs(time, ul_hist(1, :), 'r', 'LineWidth', 1.25, 'DisplayName', ul_name);
        stairs(time, u_hist(1, :), 'b', 'LineWidth', 1.25, 'DisplayName', u_name);
        hold off;
        xlabel('Iteration #');
        grid on;
    end

    title(sprintf("Learning inputs vs. safe inputs"));

    for i=1:p
        subplot(m + p, 1, m + i);
        y_name = sprintf("y%d", i);
        plot(time, y_hist(1, :), 'r', 'LineWidth', 1.25, 'DisplayName', y_name);         
        xlabel('Iteration #');
        ylabel(sprintf('Output %d', i));
        grid on;
    end
    title(sprintf("System Output"));
end

